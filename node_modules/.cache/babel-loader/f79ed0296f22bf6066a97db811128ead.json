{"ast":null,"code":"import _classCallCheck from \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/linjiajun/Desktop/htdoc/web/react-desktops/src/components/block/Iframe.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nvar Iframe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Iframe, _Component);\n\n  function Iframe() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Iframe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Iframe)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onLoad = function () {// ReactDOM.findDOMNode(this).contentDocument.body.addEventListener('click', this.props.setWindowIndex);\n    };\n\n    return _this;\n  }\n\n  _createClass(Iframe, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ReactDOM.findDOMNode(this).addEventListener('load', this.onLoad);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = this.props.style;\n\n      if (this.props.isLoad) {\n        style.visibility = \"visible\";\n      } else {\n        style.visibility = \"hidden\";\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        title: this.props.title,\n        frameBorder: this.props.frameBorder,\n        style: style,\n        width: this.props.width,\n        src: this.props.src,\n        onLoad: function onLoad() {\n          if (_this2.props.onLoad) {\n            _this2.props.onLoad;\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Iframe;\n}(Component);\n\nexport default Iframe;","map":{"version":3,"sources":["/Users/linjiajun/Desktop/htdoc/web/react-desktops/src/components/block/Iframe.js"],"names":["React","Component","Fragment","ReactDOM","Iframe","onLoad","findDOMNode","addEventListener","style","props","isLoad","visibility","title","frameBorder","width","src"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAMJC,M,GAAS,YAAM,CACb;AACD,K;;;;;;;wCANmB;AAClBF,MAAAA,QAAQ,CAACG,WAAT,CAAqB,IAArB,EAA2BC,gBAA3B,CAA4C,MAA5C,EAAoD,KAAKF,MAAzD;AACD;;;6BAMQ;AAAA;;AAAA,UACDG,KADC,GACS,KAAKC,KADd,CACDD,KADC;;AAEP,UAAG,KAAKC,KAAL,CAAWC,MAAd,EAAqB;AAAOF,QAAAA,KAAK,CAACG,UAAN,GAAiB,SAAjB;AAC3B,OADD,MACK;AACHH,QAAAA,KAAK,CAACG,UAAN,GAAiB,QAAjB;AACD;;AACD,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,KADpB;AAEE,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI,WAF1B;AAGE,QAAA,KAAK,EAAEL,KAHT;AAIE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWK,KAJpB;AAKE,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,GALlB;AAME,QAAA,MAAM,EAAE,kBAAI;AACV,cAAG,MAAI,CAACN,KAAL,CAAWJ,MAAd,EAAqB;AAAC,YAAA,MAAI,CAACI,KAAL,CAAWJ,MAAX;AAAkB;AACzC,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAeD;;;;EA/BkBJ,S;;AAmCrB,eAAeG,MAAf","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport ReactDOM from 'react-dom'\n\nclass Iframe extends Component {\n\n  componentDidMount() {\n    ReactDOM.findDOMNode(this).addEventListener('load', this.onLoad);\n  }\n\n  onLoad = () => {\n    // ReactDOM.findDOMNode(this).contentDocument.body.addEventListener('click', this.props.setWindowIndex);\n  }\n\n  render() {\n    let { style } = this.props\n    if(this.props.isLoad){      style.visibility=\"visible\"\n    }else{\n      style.visibility=\"hidden\"\n    }\n    return (\n      <Fragment>\n        <iframe\n          title={this.props.title}\n          frameBorder={this.props.frameBorder}\n          style={style}\n          width={this.props.width}\n          src={this.props.src}\n          onLoad={()=>{\n            if(this.props.onLoad){this.props.onLoad}\n          }}\n        />\n      </Fragment>\n\n    )\n  }\n}\n\n\nexport default Iframe"]},"metadata":{},"sourceType":"module"}